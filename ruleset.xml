<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="AlfasadoPrototype" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">

    <description></description>

    <ini name="memory_limit" value="256M"/>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="exact" value="false"/>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="false"/>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_HEREDOC"/>
                <element value="T_NOWDOC"/>
                <element value="T_INLINE_HTML"/>
            </property>
        </properties>
    </rule>

    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterNot"/>

    <rule ref="Squiz.WhiteSpace.FunctionSpacing" >
        <properties>
            <property name="spacing" value="1" />
        </properties>
    </rule>

    <rule ref="Squiz.PHP.NonExecutableCode.ReturnNotRequired"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>

    <!-- Covers rule: Always put spaces after commas, and on both sides of logical,
     comparison, string and assignment operators. -->
    <rule ref="WordPress.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- Covers rule: Put spaces on both sides of the opening and closing parenthesis of
         if, elseif, foreach, for, and switch blocks. -->
    <rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.SpaceBeforeFunctionOpenParenthesis"/>
    </rule>

    <!-- Covers rule: Use lowercase letters in variable and function names.
         Separate words via underscores. -->
    <rule ref="WordPress.NamingConventions.ValidFunctionName"/>
    <rule ref="WordPress.NamingConventions.ValidVariableName"/>

    <!-- Covers rule: Define a function like so: function my_function( $param1 = 'foo', $param2 = 'bar' ) { -->
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie">
        <properties>
            <property name="checkClosures" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
            <property name="requiredSpacesAfterOpen" value="1"/>
            <property name="requiredSpacesBeforeClose" value="1"/>
        </properties>
    </rule>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>

    <!-- Covers rule: Call a function, like so: my_function( $param1, func_param( $param2 ) ); -->
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="requiredSpacesAfterOpen" value="1"/>
            <property name="requiredSpacesBeforeClose" value="1"/>
        </properties>
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
    </rule>
</ruleset>
